<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--Menu Button-->
    <Style x:Key="NoHoverButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="50" />
        <Setter Property="Width" Value="50" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0 0 0 20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Set to the same background as the normal state to remove hover effect -->
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!-- Optional: Change background for pressed state -->
                            <Setter Property="Background" Value="DarkGray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Path (Menu Icons)-->
    <Style x:Key="PathStyle" TargetType="Path">
        <!--The default icon fill colour-->
        <Setter Property="Fill" Value="{StaticResource AccentDark}" />
        <Style.Triggers>
            <!--Is the cursor over the button-->
            <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Button}}" Value="True">
                <!--If the cursor is over the button, change the fill colour to the accent colour-->
                <Setter Property="Fill" Value="{StaticResource AccentRegular}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!--ViewBox Style for the icons/buttons-->
    <Style x:Key="ViewBoxIcon" TargetType="Viewbox">
        <Setter Property="Width" Value="23" />
        <Setter Property="Height" Value="23" />
    </Style>

    <Style x:Key="Box" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource ModuleBackground}" />
        <Setter Property="CornerRadius" Value="10" />
        <Setter Property="Padding" Value="20" />
        <Setter Property="Margin" Value="20" />
    </Style>
    
    <!--Regular Buttons-->
    <Style x:Key="ButtonRegular" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource ButtonBackgroundRegular}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="20 5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Set to the same background as the normal state to remove hover effect -->
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundOver}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!-- Optional: Change background for pressed state -->
                            <Setter Property="Background" Value="{StaticResource ButtonBackgroundPress}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Accent Buttons-->
    <Style x:Key="ButtonAccent" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource AccentRegular}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Height" Value="34" />
        <Setter Property="Width" Value="auto" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5" Padding="20 5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <!-- Set to the same background as the normal state to remove hover effect -->
                            <Setter Property="Background" Value="{StaticResource AccentDark}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <!-- Optional: Change background for pressed state -->
                            <Setter Property="Background" Value="{StaticResource AccentDarker}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Progressbar-->
    <Style x:Key="SubjectSkillsProgressBar" TargetType="{x:Type ProgressBar}">
        <Setter Property="Foreground" Value="{StaticResource AccentRegular}" />
        <Setter Property="Background" Value="{StaticResource AccentDarker}" />
        <Setter Property="Height" Value="10" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ProgressBar}">
                    <Border CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <Grid x:Name="PART_Track">
                            <Rectangle x:Name="PART_Indicator" HorizontalAlignment="Left" Fill="{TemplateBinding Foreground}" RadiusX="5" RadiusY="5" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--TabItem-->
    <Style x:Key="MainTabItemStyle" TargetType="TabItem">
        <Setter Property="Foreground" Value="{DynamicResource WhiteText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border x:Name="TabBorder" Background="{DynamicResource AccentDarker}"
                            BorderThickness="0"
                            BorderBrush="{StaticResource AccentRegular}"
                            CornerRadius="5 5 0 0">
                        <ContentPresenter x:Name="ContentSite"
                                          VerticalAlignment="Center"
                                          HorizontalAlignment="Center"
                                          ContentSource="Header"
                                          Margin="20 10 20 10"
                                          />
                        
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource AccentDark}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabBorder" Property="Background" Value="{DynamicResource AccentRegular}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>